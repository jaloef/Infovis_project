Traceback (most recent call last):
  File "/Users/jaloef/anaconda3/envs/infovis/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/jaloef/anaconda3/envs/infovis/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jaloef/anaconda3/envs/infovis/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jaloef/anaconda3/envs/infovis/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/jaloef/anaconda3/envs/infovis/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/jaloef/anaconda3/envs/infovis/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/jaloef/anaconda3/envs/infovis/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fig = px.line(df, x="Jaartal", y="Labour strikes", title='Number of labour strikes per year')

# Customize the plot layout
fig.update_layout(
    plot_bgcolor='white',
    height=400,
    xaxis=dict(title='Years'),
    yaxis=dict(title='')  # Remove y-axis tick labels
)

# Add blue small circles when hovering over a point
fig.update_traces(
    mode='lines+markers',
    hovertemplate='<b>%{x}</b><br>Labor strikes: <b>%{y}</b>' +
                  '<extra></extra>',  # Use <extra></extra> to disable default hover info
    line=dict(color='#00a1cd', width=2),
    marker=dict(color='#00a1cd', size=5),
)

# Add horizontal lines at y = 0, 10, 20, 30, and 40
y_values = [0, 10, 20, 30, 40]
for y in y_values:
    fig.add_shape(
        type='line',
        x0=min(df['Jaartal']),
        x1=max(df['Jaartal']),
        y0=y,
        y1=y,
        line=dict(color='black'),
        line_width=0.5
    )

# Show the plot
fig.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[8], line 1[0m
[0;32m----> 1[0m fig [38;5;241m=[39m [43mpx[49m[38;5;241;43m.[39;49m[43mline[49m[43m([49m[43mdf[49m[43m,[49m[43m [49m[43mx[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mJaartal[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43my[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mLabour strikes[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mtitle[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mNumber of labour strikes per year[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m      3[0m [38;5;66;03m# Customize the plot layout[39;00m
[1;32m      4[0m fig[38;5;241m.[39mupdate_layout(
[1;32m      5[0m     plot_bgcolor[38;5;241m=[39m[38;5;124m'[39m[38;5;124mwhite[39m[38;5;124m'[39m,
[1;32m      6[0m     height[38;5;241m=[39m[38;5;241m400[39m,
[1;32m      7[0m     xaxis[38;5;241m=[39m[38;5;28mdict[39m(title[38;5;241m=[39m[38;5;124m'[39m[38;5;124mYears[39m[38;5;124m'[39m),
[1;32m      8[0m     yaxis[38;5;241m=[39m[38;5;28mdict[39m(title[38;5;241m=[39m[38;5;124m'[39m[38;5;124m'[39m)  [38;5;66;03m# Remove y-axis tick labels[39;00m
[1;32m      9[0m )

File [0;32m~/anaconda3/envs/infovis/lib/python3.11/site-packages/plotly/express/_chart_types.py:264[0m, in [0;36mline[0;34m(data_frame, x, y, line_group, color, line_dash, symbol, hover_name, hover_data, custom_data, text, facet_row, facet_col, facet_col_wrap, facet_row_spacing, facet_col_spacing, error_x, error_x_minus, error_y, error_y_minus, animation_frame, animation_group, category_orders, labels, orientation, color_discrete_sequence, color_discrete_map, line_dash_sequence, line_dash_map, symbol_sequence, symbol_map, markers, log_x, log_y, range_x, range_y, line_shape, render_mode, title, template, width, height)[0m
[1;32m    216[0m [38;5;28;01mdef[39;00m [38;5;21mline[39m(
[1;32m    217[0m     data_frame[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m    218[0m     x[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[0;32m   (...)[0m
[1;32m    258[0m     height[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m    259[0m ) [38;5;241m-[39m[38;5;241m>[39m go[38;5;241m.[39mFigure:
[1;32m    260[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[1;32m    261[0m [38;5;124;03m    In a 2D line plot, each row of `data_frame` is represented as vertex of[39;00m
[1;32m    262[0m [38;5;124;03m    a polyline mark in 2D space.[39;00m
[1;32m    263[0m [38;5;124;03m    """[39;00m
[0;32m--> 264[0m     [38;5;28;01mreturn[39;00m [43mmake_figure[49m[43m([49m[43margs[49m[38;5;241;43m=[39;49m[38;5;28;43mlocals[39;49m[43m([49m[43m)[49m[43m,[49m[43m [49m[43mconstructor[49m[38;5;241;43m=[39;49m[43mgo[49m[38;5;241;43m.[39;49m[43mScatter[49m[43m)[49m

File [0;32m~/anaconda3/envs/infovis/lib/python3.11/site-packages/plotly/express/_core.py:2003[0m, in [0;36mmake_figure[0;34m(args, constructor, trace_patch, layout_patch)[0m
[1;32m   2000[0m layout_patch [38;5;241m=[39m layout_patch [38;5;129;01mor[39;00m {}
[1;32m   2001[0m apply_default_cascade(args)
[0;32m-> 2003[0m args [38;5;241m=[39m [43mbuild_dataframe[49m[43m([49m[43margs[49m[43m,[49m[43m [49m[43mconstructor[49m[43m)[49m
[1;32m   2004[0m [38;5;28;01mif[39;00m constructor [38;5;129;01min[39;00m [go[38;5;241m.[39mTreemap, go[38;5;241m.[39mSunburst, go[38;5;241m.[39mIcicle] [38;5;129;01mand[39;00m args[[38;5;124m"[39m[38;5;124mpath[39m[38;5;124m"[39m] [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m   2005[0m     args [38;5;241m=[39m process_dataframe_hierarchy(args)

File [0;32m~/anaconda3/envs/infovis/lib/python3.11/site-packages/plotly/express/_core.py:1412[0m, in [0;36mbuild_dataframe[0;34m(args, constructor)[0m
[1;32m   1409[0m     args[[38;5;124m"[39m[38;5;124mcolor[39m[38;5;124m"[39m] [38;5;241m=[39m [38;5;28;01mNone[39;00m
[1;32m   1410[0m [38;5;66;03m# now that things have been prepped, we do the systematic rewriting of `args`[39;00m
[0;32m-> 1412[0m df_output, wide_id_vars [38;5;241m=[39m [43mprocess_args_into_dataframe[49m[43m([49m
[1;32m   1413[0m [43m    [49m[43margs[49m[43m,[49m[43m [49m[43mwide_mode[49m[43m,[49m[43m [49m[43mvar_name[49m[43m,[49m[43m [49m[43mvalue_name[49m
[1;32m   1414[0m [43m[49m[43m)[49m
[1;32m   1416[0m [38;5;66;03m# now that `df_output` exists and `args` contains only references, we complete[39;00m
[1;32m   1417[0m [38;5;66;03m# the special-case and wide-mode handling by further rewriting args and/or mutating[39;00m
[1;32m   1418[0m [38;5;66;03m# df_output[39;00m
[1;32m   1420[0m count_name [38;5;241m=[39m _escape_col_name(df_output, [38;5;124m"[39m[38;5;124mcount[39m[38;5;124m"[39m, [var_name, value_name])

File [0;32m~/anaconda3/envs/infovis/lib/python3.11/site-packages/plotly/express/_core.py:1208[0m, in [0;36mprocess_args_into_dataframe[0;34m(args, wide_mode, var_name, value_name)[0m
[1;32m   1206[0m         [38;5;28;01mif[39;00m argument [38;5;241m==[39m [38;5;124m"[39m[38;5;124mindex[39m[38;5;124m"[39m:
[1;32m   1207[0m             err_msg [38;5;241m+[39m[38;5;241m=[39m [38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124m To use the index, pass it in directly as `df.index`.[39m[38;5;124m"[39m
[0;32m-> 1208[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(err_msg)
[1;32m   1209[0m [38;5;28;01melif[39;00m length [38;5;129;01mand[39;00m [38;5;28mlen[39m(df_input[argument]) [38;5;241m!=[39m length:
[1;32m   1210[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m   1211[0m         [38;5;124m"[39m[38;5;124mAll arguments should have the same length. [39m[38;5;124m"[39m
[1;32m   1212[0m         [38;5;124m"[39m[38;5;124mThe length of column argument `df[[39m[38;5;132;01m%s[39;00m[38;5;124m]` is [39m[38;5;132;01m%d[39;00m[38;5;124m, whereas the [39m[38;5;124m"[39m
[0;32m   (...)[0m
[1;32m   1219[0m         )
[1;32m   1220[0m     )

[0;31mValueError[0m: Value of 'x' is not the name of a column in 'data_frame'. Expected one of ['Country Name', 'Regional Indicator', 'Year_x', 'Life Ladder', 'Log GDP Per Capita', 'Social Support', 'Healthy Life Expectancy At Birth', 'Freedom To Make Life Choices', 'Generosity', 'Perceptions Of Corruption', 'Positive Affect', 'Negative Affect', 'Confidence In National Government', 'Code', 'Year_y', 'Schizophrenia (%)', 'Bipolar disorder (%)', 'Eating disorders (%)', 'Anxiety disorders (%)', 'Drug use disorders (%)', 'Depression (%)', 'Alcohol use disorders (%)'] but received: Jaartal

