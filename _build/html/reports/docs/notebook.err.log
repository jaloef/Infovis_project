Traceback (most recent call last):
  File "/Users/jaloef/anaconda3/envs/infovis/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/jaloef/anaconda3/envs/infovis/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jaloef/anaconda3/envs/infovis/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/jaloef/anaconda3/envs/infovis/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/jaloef/anaconda3/envs/infovis/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/jaloef/anaconda3/envs/infovis/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/jaloef/anaconda3/envs/infovis/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# reads the necessary modules/libraries
import geopandas as gpd
import pandas as pd
import plotly.express as px
import random
import seaborn as sns
import numpy as np
import plotly.graph_objects as go
import warning as warn

# reads the required datasets and displays them
world_happiness = pd.read_csv('World Happiness Report.csv')
world_mental = pd.read_csv('Mental health Depression disorder Data.csv')

# prepares the two datasets for their merging
# by selecting their common year, 2017, and changing a column name
world_happiness_2017 = world_happiness.loc[world_happiness['Year'] == 2017].copy().dropna()
world_mental_2017 = world_mental.loc[world_mental['Year'] == '2017'].copy().drop('index', axis=1).dropna()
world_mental_2017.rename(columns={"Entity": "Country Name"}, inplace=True)

# merges the DataFrames, and displays them consequently
df = pd.merge(world_happiness_2017, world_mental_2017, on="Country Name", how='inner')

# # seeks a possible Pearson's correlation
# print("The correlation between GDP per capita and Life Ladder is:", 
#       df['Log GDP Per Capita'].corr(df['Life Ladder']) )

# prepares the data for the creation of bar charts

# displays the disorders as floats

data_columns= [
            'Bipolar disorder (%)','Schizophrenia (%)','Eating disorders (%)',
            'Anxiety disorders (%)','Drug use disorders (%)','Depression (%)',
            'Alcohol use disorders (%)'
]

df[data_columns]= df[data_columns].astype(float)

numeric_columns = df.select_dtypes(include='number')

df_mean = df.groupby(['Regional Indicator'])[numeric_columns.columns].mean()
df_mean = df_mean.reset_index()

warn.filterwarnings('ignore')
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 9[0m
[1;32m      7[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[1;32m      8[0m [38;5;28;01mimport[39;00m [38;5;21;01mplotly[39;00m[38;5;21;01m.[39;00m[38;5;21;01mgraph_objects[39;00m [38;5;28;01mas[39;00m [38;5;21;01mgo[39;00m
[0;32m----> 9[0m [38;5;28;01mimport[39;00m [38;5;21;01mwarning[39;00m [38;5;28;01mas[39;00m [38;5;21;01mwarn[39;00m
[1;32m     11[0m [38;5;66;03m# reads the required datasets and displays them[39;00m
[1;32m     12[0m world_happiness [38;5;241m=[39m pd[38;5;241m.[39mread_csv([38;5;124m'[39m[38;5;124mWorld Happiness Report.csv[39m[38;5;124m'[39m)

[0;31mModuleNotFoundError[0m: No module named 'warning'

